syntax = "proto3";

package temporal.compound;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "temporal/compound/params.proto";
import "temporal/compound/compound_setting.proto";
import "temporal/compound/validator_setting.proto";
import "cosmos/base/v1beta1/coin.proto";
import "temporal/compound/previous_compounding.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/temporal-zone/temporal/x/compound/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/temporal/compound/params";
  
  }
  
  // Queries a list of CompoundSetting items.
  rpc CompoundSetting    (QueryGetCompoundSettingRequest) returns (QueryGetCompoundSettingResponse) {
    option (google.api.http).get = "/temporal/compound/compound_setting/{delegator}";
  
  }
  rpc CompoundSettingAll (QueryAllCompoundSettingRequest) returns (QueryAllCompoundSettingResponse) {
    option (google.api.http).get = "/temporal/compound/compound_setting";
  
  }
  
  // Queries a list of PreviousCompounding items.
  rpc PreviousCompounding    (QueryGetPreviousCompoundingRequest) returns (QueryGetPreviousCompoundingResponse) {
    option (google.api.http).get = "/temporal/compound/previous_compounding/{delegator}";
  
  }
  rpc PreviousCompoundingAll (QueryAllPreviousCompoundingRequest) returns (QueryAllPreviousCompoundingResponse) {
    option (google.api.http).get = "/temporal/compound/previous_compounding";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetCompoundSettingRequest {
  option (cosmos.msg.v1.signer) = "delegator";
  string delegator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryGetCompoundSettingResponse {
  CompoundSetting compoundSetting = 1 [(gogoproto.nullable) = false];
}

message QueryAllCompoundSettingRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCompoundSettingResponse {
  repeated CompoundSetting                        compoundSetting = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

message QueryGetPreviousCompoundingRequest {
  option (cosmos.msg.v1.signer) = "delegator";
  string delegator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryGetPreviousCompoundingResponse {
  PreviousCompounding previousCompounding = 1 [(gogoproto.nullable) = false];
}

message QueryAllPreviousCompoundingRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPreviousCompoundingResponse {
  repeated PreviousCompounding                    previousCompounding = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination          = 2;
}

