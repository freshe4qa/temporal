syntax = "proto3";

package temporal.compound;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "temporal/compound/params.proto";
import "temporal/compound/compound_setting.proto";
import "temporal/compound/validator_setting.proto";
import "cosmos/base/v1beta1/coin.proto";
import "temporal/compound/previous_compound.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/temporal-zone/temporal/x/compound/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/temporal/compound/params";
  
  }
  
  // Queries a list of CompoundSetting items.
  rpc CompoundSetting    (QueryGetCompoundSettingRequest) returns (QueryGetCompoundSettingResponse) {
    option (google.api.http).get = "/temporal/compound/compound_setting/{delegator}";
  
  }
  rpc CompoundSettingAll (QueryAllCompoundSettingRequest) returns (QueryAllCompoundSettingResponse) {
    option (google.api.http).get = "/temporal/compound/compound_setting";
  
  }
  
  // Queries a list of PreviousCompound items.
  rpc PreviousCompound (QueryGetPreviousCompoundRequest) returns (QueryGetPreviousCompoundResponse) {
    option (google.api.http).get = "/temporal/compound/previous_compound/{delegator}";
  
  }
  rpc PreviousCompoundAll (QueryAllPreviousCompoundRequest) returns (QueryAllPreviousCompoundResponse) {
    option (google.api.http).get = "/temporal/compound/previous_compound";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetCompoundSettingRequest {
  option (cosmos.msg.v1.signer) = "delegator";
  string delegator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryGetCompoundSettingResponse {
  CompoundSetting compoundSetting = 1 [(gogoproto.nullable) = false];
}

message QueryAllCompoundSettingRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCompoundSettingResponse {
  repeated CompoundSetting          compoundSetting = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPreviousCompoundRequest {
  string delegator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryGetPreviousCompoundResponse {
  PreviousCompound previousCompound = 1 [(gogoproto.nullable) = false];
}

message QueryAllPreviousCompoundRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPreviousCompoundResponse {
  repeated PreviousCompound        previousCompound = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

