// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: temporal/record/delegation_timestamp.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DelegationTimestamp struct {
	Timestamp time.Time  `protobuf:"bytes,1,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	Amount    types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (m *DelegationTimestamp) Reset()         { *m = DelegationTimestamp{} }
func (m *DelegationTimestamp) String() string { return proto.CompactTextString(m) }
func (*DelegationTimestamp) ProtoMessage()    {}
func (*DelegationTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_642275854e91f2d0, []int{0}
}
func (m *DelegationTimestamp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelegationTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelegationTimestamp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelegationTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationTimestamp.Merge(m, src)
}
func (m *DelegationTimestamp) XXX_Size() int {
	return m.Size()
}
func (m *DelegationTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationTimestamp proto.InternalMessageInfo

func (m *DelegationTimestamp) GetTimestamp() time.Time {
	if m != nil {
		return m.Timestamp
	}
	return time.Time{}
}

func (m *DelegationTimestamp) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

func init() {
	proto.RegisterType((*DelegationTimestamp)(nil), "temporal.record.DelegationTimestamp")
}

func init() {
	proto.RegisterFile("temporal/record/delegation_timestamp.proto", fileDescriptor_642275854e91f2d0)
}

var fileDescriptor_642275854e91f2d0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xbf, 0x4a, 0xc4, 0x40,
	0x10, 0xc6, 0xb3, 0x22, 0x87, 0xc6, 0x42, 0x38, 0x2d, 0xce, 0x14, 0x1b, 0xb1, 0x12, 0xc1, 0x19,
	0x4f, 0x0b, 0xfb, 0x68, 0x65, 0x79, 0x58, 0xd9, 0xc8, 0x26, 0x37, 0xae, 0x81, 0x6c, 0x26, 0x24,
	0x1b, 0x51, 0x9f, 0xe2, 0xf0, 0xa9, 0xae, 0xbc, 0xd2, 0x4a, 0x25, 0x79, 0x11, 0xc9, 0x5f, 0xc1,
	0x6e, 0x87, 0xef, 0x37, 0xdf, 0xfe, 0x18, 0xf7, 0xcc, 0x92, 0xc9, 0x38, 0x57, 0x09, 0xe6, 0x14,
	0x71, 0xbe, 0xc4, 0x25, 0x25, 0xa4, 0x95, 0x8d, 0x39, 0x7d, 0xb4, 0xb1, 0xa1, 0xc2, 0x2a, 0x93,
	0x41, 0x96, 0xb3, 0xe5, 0xe9, 0xfe, 0xc0, 0x42, 0xc7, 0x7a, 0x87, 0x9a, 0x35, 0xb7, 0x19, 0x36,
	0xaf, 0x0e, 0xf3, 0x64, 0xc4, 0x85, 0xe1, 0x02, 0x43, 0x55, 0x10, 0xbe, 0xcc, 0x43, 0xb2, 0x6a,
	0x8e, 0x11, 0xc7, 0x69, 0x9f, 0xfb, 0x9a, 0x59, 0x27, 0x84, 0xed, 0x14, 0x96, 0x4f, 0xf8, 0xef,
	0x9f, 0x93, 0x0f, 0xe1, 0x1e, 0xdc, 0x8e, 0x1a, 0xf7, 0x43, 0x3a, 0x0d, 0xdc, 0xdd, 0x11, 0x9d,
	0x89, 0x63, 0x71, 0xba, 0x77, 0xe9, 0x41, 0x57, 0x06, 0x43, 0x19, 0x8c, 0x78, 0xb0, 0xb3, 0xfe,
	0xf2, 0x9d, 0xd5, 0xb7, 0x2f, 0x16, 0x7f, 0x6b, 0xd3, 0x6b, 0x77, 0xa2, 0x0c, 0x97, 0xa9, 0x9d,
	0x6d, 0xb5, 0x05, 0x47, 0xd0, 0xd9, 0x42, 0x63, 0x0b, 0xbd, 0x2d, 0xdc, 0x70, 0x9c, 0x06, 0xdb,
	0xcd, 0xfe, 0xa2, 0xc7, 0x83, 0xbb, 0x75, 0x25, 0xc5, 0xa6, 0x92, 0xe2, 0xa7, 0x92, 0x62, 0x55,
	0x4b, 0x67, 0x53, 0x4b, 0xe7, 0xb3, 0x96, 0xce, 0xc3, 0x85, 0x8e, 0xed, 0x73, 0x19, 0x42, 0xc4,
	0x06, 0x87, 0x0b, 0x9d, 0xbf, 0x73, 0x4a, 0xe3, 0x84, 0xaf, 0xc3, 0x75, 0xed, 0x5b, 0x46, 0x45,
	0x38, 0x69, 0x6d, 0xaf, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xc9, 0x9a, 0x32, 0x7d, 0x01,
	0x00, 0x00,
}

func (m *DelegationTimestamp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelegationTimestamp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelegationTimestamp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDelegationTimestamp(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Timestamp, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Timestamp):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintDelegationTimestamp(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintDelegationTimestamp(dAtA []byte, offset int, v uint64) int {
	offset -= sovDelegationTimestamp(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DelegationTimestamp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Timestamp)
	n += 1 + l + sovDelegationTimestamp(uint64(l))
	l = m.Amount.Size()
	n += 1 + l + sovDelegationTimestamp(uint64(l))
	return n
}

func sovDelegationTimestamp(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDelegationTimestamp(x uint64) (n int) {
	return sovDelegationTimestamp(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DelegationTimestamp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDelegationTimestamp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelegationTimestamp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelegationTimestamp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationTimestamp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDelegationTimestamp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationTimestamp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Timestamp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationTimestamp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDelegationTimestamp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationTimestamp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDelegationTimestamp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDelegationTimestamp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDelegationTimestamp(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDelegationTimestamp
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationTimestamp
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationTimestamp
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDelegationTimestamp
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDelegationTimestamp
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDelegationTimestamp
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDelegationTimestamp        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDelegationTimestamp          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDelegationTimestamp = fmt.Errorf("proto: unexpected end of group")
)
